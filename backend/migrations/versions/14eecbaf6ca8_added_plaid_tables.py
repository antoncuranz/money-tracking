"""Added plaid tables

Revision ID: 14eecbaf6ca8
Revises: 58e5b64cb36b
Create Date: 2025-03-09 18:57:06.064257

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '14eecbaf6ca8'
down_revision: Union[str, None] = '58e5b64cb36b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plaidconnection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('plaid_item_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('plaid_access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plaidaccount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('plaid_account_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('connection_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['connection_id'], ['plaidconnection.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plaid_account_id')
    )
    op.add_column('account', sa.Column('plaid_account_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'account', 'plaidaccount', ['plaid_account_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'account', type_='foreignkey')
    op.drop_column('account', 'plaid_account_id')
    op.drop_table('plaidaccount')
    op.drop_table('plaidconnection')
    # ### end Alembic commands ###
